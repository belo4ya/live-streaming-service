type Query {
    streams: [Stream!]!
}

type Mutation {
    createStream(input: NewStream!): Stream!
}

type Stream {
    id: ID!
    name: String!
    username: String!
    viewers: Int!
    createdAt: Timestamp!
    updatedAt: Timestamp!
}

input NewStream {
    name: String!
    username: Boolean!
}

scalar Timestamp @goModel(model: "github.com/belo4ya/live-streaming-service/pkg/graphql.Timestamp")


directive @goModel(
    model: String
    models: [String!]
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION

directive @goField(
    forceResolver: Boolean
    name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

directive @goTag(
    key: String!
    value: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION
