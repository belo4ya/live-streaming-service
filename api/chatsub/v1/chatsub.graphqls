type Query {
    history(offset: Int): [Message!]!
}

type Mutation {
    sendMessage(input: NewMessage): Message
}

type Subscription {
    newMessage(channelID: ID!): Message
}

input NewMessage {
    channelID: ID!
    userID: ID!
    username: String!
    content: String!
}

type Message {
    id: ID!
    createdAt: Timestamp!
    channelID: ID!
    userID: ID!
    username: String!
    content: String!
}

scalar Timestamp @goModel(model: "github.com/belo4ya/live-streaming-service/pkg/graphql.Timestamp")

directive @goModel(
    model: String
    models: [String!]
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION

directive @goField(
    forceResolver: Boolean
    name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

directive @goTag(
    key: String!
    value: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION
