version: "3.8"

services:
  caddy:
    container_name: caddy
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./caddy/config/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/config:/config
      - ./caddy/data:/data

  #  authelia:
  #    container_name: authelia
  #    image: authelia/authelia:latest
  #    environment:
  #      AUTHELIA_JWT_SECRET_FILE: /secrets/JWT_SECRET
  #      AUTHELIA_SESSION_SECRET_FILE: /secrets/SESSION_SECRET
  #      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: /secrets/STORAGE_ENCRYPTION_KEY
  #    ports:
  #      - "9091:9091"
  #    volumes:
  #      - ./authelia/config:/config
  #      - ./authelia/secrets:/secrets
  #      - ./authelia/data:/data

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    command: "--config.file=/etc/prometheus/prometheus.yaml"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - ./prometheus/data:/prometheus
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/config/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:latest
    ports:
      - "9100"
  #  cadvisor:
  #    container_name: cadvisor
  #    image: gcr.io/cadvisor/cadvisor:v0.47.1
  #    ports:
  #      - "8080"
  #    volumes:
  #      - /:/rootfs:ro
  #      - /var/run:/var/run:rw
  #      - /sys:/sys:ro
  #      - /var/lib/docker/:/var/lib/docker:ro

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: "-config.file=/etc/loki/config.yaml -target=all"
    ports:
      - "3100"
    volumes:
      - ./loki/config/loki.yaml:/etc/loki/config.yaml
      - ./loki/data:/data
    depends_on:
      - minio_loki
  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    command: "-config.file=/etc/promtail/config.yaml"
    volumes:
      - ./loki/config/promtail.yaml:/etc/promtail/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - loki
  minio_loki:
    container_name: minio_loki
    hostname: minio-loki
    image: minio/minio:latest
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        minio server --console-address ":9001" /data
    environment:
      MINIO_ACCESS_KEY: minio_access_key
      MINIO_SECRET_KEY: minio_secret_key
      MINIO_PROMETHEUS_AUTH_TYPE: public
      MINIO_PROMETHEUS_URL: http://prometheus:9090
      MINIO_PROMETHEUS_JOB_ID: minio-loki
      MINIO_UPDATE: off
    ports:
      - "9000"
      - "9001:9001"
    volumes:
      - ./loki/s3:/data

  flog:
    container_name: flog
    image: mingrammer/flog
    command: "-f json -d 0.5s -l"

  srs:
    container_name: srs
    image: ossrs/srs:latest
    command: "./objs/srs -c conf/docker.conf"
    ports:
      - "1935:1935"
      - "1985:1985"
      - "8080:8080"
